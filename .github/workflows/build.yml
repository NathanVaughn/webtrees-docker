name: Build and Push Images

on:
  workflow_dispatch:
    inputs:
      versions:
        type: string
        required: true
        description: "Space-separated version numbers to build"

jobs:
  bake:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Create Bake File
        run: python3 dev/baker.py --arm --file --versions ${{ inputs.versions }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Generate Build Matrix
        id: generate
        uses: docker/bake-action/subaction/matrix@v6
        with:
          target: webtrees
          fields: platforms

      - name: Upload Bake File
        uses: actions/upload-artifact@v4
        with:
          path: docker-bake.json
          name: bake-file

      - name: Create Release Matrix
        id: releases
        run: python3 dev/releases.py --versions ${{ inputs.versions }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

    outputs:
      build-matrix: ${{ steps.generate.outputs.matrix }}
      release-matrix: ${{ steps.releases.outputs.matrix }}

  build:
    needs: bake
    runs-on: ${{ startsWith(matrix.platforms, 'linux/arm') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}

    strategy:
      matrix:
        include: ${{ fromJson(needs.bake.outputs.build-matrix) }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Bake File
        uses: actions/download-artifact@v5
        with:
          name: bake-file

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: DockerHub Login
        if: contains(matrix.tags, 'docker.io')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}

      - name: Github CR Login
        if: contains(matrix.tags, 'ghcr.io')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/bake-action@v6
        with:
          targets: ${{ matrix.target }}
          set: "*.platform=${{ matrix.platforms }}"

  update:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Update DockerHub README
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}
        with:
          destination_container_repo: ${{ secrets.DOCKERHUB_USERNAME }}/webtrees
          provider: dockerhub
          short_description: ${{ github.event.repository.description }}

  release:
    needs:
      - bake
      - build

    strategy:
      matrix: ${{ fromJSON(needs.bake.outputs.release-matrix) }}

    permissions:
      contents: write

    uses: NathanVaughn/reusable-actions/.github/workflows/create-release.yml@main
    with:
      tag: ${{ matrix.tag }}
      body: ${{ matrix.body }}
      prerelease: ${{ matrix.prerelease }}
